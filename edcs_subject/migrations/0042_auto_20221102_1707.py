# Generated by Django 3.1.7 on 2022-11-02 17:07

import _socket
from django.conf import settings
import django.contrib.sites.managers
from django.db import migrations, models
import django.db.models.deletion
import django_audit_fields.fields.hostname_modification_field
import django_audit_fields.fields.userfield
import django_audit_fields.fields.uuid_auto_field
import django_audit_fields.models.audit_model_mixin
import django_crypto_fields.fields.encrypted_text_field
import django_revision.revision_field
import edcs_model.models.fields.other_charfield
import edcs_model.models.validators.date
import edcs_utils.date
import edcs_visit_schedule.managers
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
        ('edcs_subject', '0041_followup_test_ordered_nw'),
    ]

    operations = [
        migrations.AlterField(
            model_name='historicallabpartc',
            name='histochemistry',
            field=models.CharField(choices=[('POS_TTF1', 'Positive- TTF1'), ('POS_P40', 'Positive- P40'), ('POS_P63', 'Positive- P63'), ('POS_PANCYTOKERATINE', 'Positive- PANCYTOKERATINE'), ('POS_CK20', 'Positive- CK20'), ('POS_CK7', 'Positive- CK7'), ('POS_CK5_6', 'Positive- CK5/6'), ('NEG', 'Negative'), ('not_done', 'Note done')], max_length=45, verbose_name='Histochemistry'),
        ),
        migrations.AlterField(
            model_name='historicallabpartc',
            name='immunohistochemistry',
            field=models.CharField(choices=[('POS_TTF1', 'Positive- TTF1'), ('POS_P40', 'Positive- P40'), ('POS_P63', 'Positive- P63'), ('POS_PANCYTOKERATINE', 'Positive- PANCYTOKERATINE'), ('POS_CK20', 'Positive- CK20'), ('POS_CK7', 'Positive- CK7'), ('POS_CK5_6', 'Positive- CK5/6'), ('NEG', 'Negative'), ('not_done', 'Note done')], max_length=45, verbose_name='Immunohistochemistry'),
        ),
        migrations.AlterField(
            model_name='labpartc',
            name='histochemistry',
            field=models.CharField(choices=[('POS_TTF1', 'Positive- TTF1'), ('POS_P40', 'Positive- P40'), ('POS_P63', 'Positive- P63'), ('POS_PANCYTOKERATINE', 'Positive- PANCYTOKERATINE'), ('POS_CK20', 'Positive- CK20'), ('POS_CK7', 'Positive- CK7'), ('POS_CK5_6', 'Positive- CK5/6'), ('NEG', 'Negative'), ('not_done', 'Note done')], max_length=45, verbose_name='Histochemistry'),
        ),
        migrations.AlterField(
            model_name='labpartc',
            name='immunohistochemistry',
            field=models.CharField(choices=[('POS_TTF1', 'Positive- TTF1'), ('POS_P40', 'Positive- P40'), ('POS_P63', 'Positive- P63'), ('POS_PANCYTOKERATINE', 'Positive- PANCYTOKERATINE'), ('POS_CK20', 'Positive- CK20'), ('POS_CK7', 'Positive- CK7'), ('POS_CK5_6', 'Positive- CK5/6'), ('NEG', 'Negative'), ('not_done', 'Note done')], max_length=45, verbose_name='Immunohistochemistry'),
        ),
        migrations.CreateModel(
            name='HistoricalDeathReport',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_datetime', models.DateTimeField(default=edcs_utils.date.get_utcnow, validators=[edcs_model.models.validators.date.datetime_not_future], verbose_name='Report Date')),
                ('death_date', models.DateField(null=True, validators=[edcs_model.models.validators.date.date_not_future], verbose_name='Date of Death')),
                ('death_location', models.CharField(choices=[('home', 'At home'), ('hospital_clinic', 'Hospital/clinic'), ('elsewhere', 'Elsewhere')], max_length=50, verbose_name='Where did the participant die?')),
                ('hospital_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='If death occurred at hospital / clinic, please give name of the facility')),
                ('informant_contact', django_crypto_fields.fields.encrypted_text_field.EncryptedTextField(blank=True, help_text=' (Encryption: AES local)', max_length=71, null=True)),
                ('informant_relationship', models.CharField(choices=[('husband_wife', 'Husband/wife'), ('Parent', 'Parent'), ('child', 'Child'), ('unknown', 'Unknown'), ('OTHER', 'Other')], max_length=50, verbose_name='Informants relationship to the participant?')),
                ('other_informant_relationship', edcs_model.models.fields.other_charfield.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If other, please specify ...')),
                ('death_certificate', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=15, verbose_name='Is a death certificate is available?')),
                ('cause_of_death', models.CharField(help_text='Main cause of death in the opinion of the local study doctor and local PI', max_length=180, verbose_name='Main cause of death')),
                ('cause_of_death_other', edcs_model.models.fields.other_charfield.OtherCharField(blank=True, max_length=100, null=True, verbose_name='If other, please specify ...')),
                ('secondary_cause_of_death', models.CharField(help_text='Secondary cause of death in the opinion of the local study doctor and local PI', max_length=180, verbose_name='Secondary cause of death')),
                ('secondary_cause_of_death_other', models.CharField(blank=True, max_length=100, null=True, verbose_name='If "Other" above, please specify')),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site')),
                ('subject_visit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edcs_subject.subjectvisit')),
            ],
            options={
                'verbose_name': 'historical Death Report',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='DeathReport',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edcs_utils.date.get_utcnow, validators=[edcs_model.models.validators.date.datetime_not_future], verbose_name='Report Date')),
                ('death_date', models.DateField(null=True, validators=[edcs_model.models.validators.date.date_not_future], verbose_name='Date of Death')),
                ('death_location', models.CharField(choices=[('home', 'At home'), ('hospital_clinic', 'Hospital/clinic'), ('elsewhere', 'Elsewhere')], max_length=50, verbose_name='Where did the participant die?')),
                ('hospital_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='If death occurred at hospital / clinic, please give name of the facility')),
                ('informant_contact', django_crypto_fields.fields.encrypted_text_field.EncryptedTextField(blank=True, help_text=' (Encryption: AES local)', max_length=71, null=True)),
                ('informant_relationship', models.CharField(choices=[('husband_wife', 'Husband/wife'), ('Parent', 'Parent'), ('child', 'Child'), ('unknown', 'Unknown'), ('OTHER', 'Other')], max_length=50, verbose_name='Informants relationship to the participant?')),
                ('other_informant_relationship', edcs_model.models.fields.other_charfield.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If other, please specify ...')),
                ('death_certificate', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=15, verbose_name='Is a death certificate is available?')),
                ('cause_of_death', models.CharField(help_text='Main cause of death in the opinion of the local study doctor and local PI', max_length=180, verbose_name='Main cause of death')),
                ('cause_of_death_other', edcs_model.models.fields.other_charfield.OtherCharField(blank=True, max_length=100, null=True, verbose_name='If other, please specify ...')),
                ('secondary_cause_of_death', models.CharField(help_text='Secondary cause of death in the opinion of the local study doctor and local PI', max_length=180, verbose_name='Secondary cause of death')),
                ('secondary_cause_of_death_other', models.CharField(blank=True, max_length=100, null=True, verbose_name='If "Other" above, please specify')),
                ('site', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='sites.site')),
                ('subject_visit', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='edcs_subject.subjectvisit')),
            ],
            options={
                'verbose_name': 'Death Report',
                'verbose_name_plural': 'Death Report',
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
            },
            managers=[
                ('on_site', django.contrib.sites.managers.CurrentSiteManager()),
                ('objects', edcs_visit_schedule.managers.CrfModelManager()),
            ],
        ),
    ]
