# Generated by Django 3.1.7 on 2022-08-03 15:48

import _socket
from django.conf import settings
import django.contrib.sites.managers
from django.db import migrations, models
import django.db.models.deletion
import django_audit_fields.fields.hostname_modification_field
import django_audit_fields.fields.userfield
import django_audit_fields.fields.uuid_auto_field
import django_audit_fields.models.audit_model_mixin
import django_revision.revision_field
import edcs_model.models.fields.other_charfield
import edcs_utils.date
import edcs_visit_schedule.managers
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
        ('edcs_subject', '0034_auto_20220705_1656'),
    ]

    operations = [
        migrations.AlterField(
            model_name='historicallabparta',
            name='baseline_cd4_counts',
            field=models.IntegerField(blank=True, null=True, verbose_name='Baseline CD4 counts'),
        ),
        migrations.AlterField(
            model_name='historicallabparta',
            name='baseline_viral_load',
            field=models.IntegerField(blank=True, null=True, verbose_name='Baseline Viral Load'),
        ),
        migrations.AlterField(
            model_name='historicalpreairquality',
            name='household_num',
            field=models.CharField(blank=True, max_length=14, null=True, verbose_name='House hold number:'),
        ),
        migrations.AlterField(
            model_name='labparta',
            name='baseline_cd4_counts',
            field=models.IntegerField(blank=True, null=True, verbose_name='Baseline CD4 counts'),
        ),
        migrations.AlterField(
            model_name='labparta',
            name='baseline_viral_load',
            field=models.IntegerField(blank=True, null=True, verbose_name='Baseline Viral Load'),
        ),
        migrations.AlterField(
            model_name='preairquality',
            name='household_num',
            field=models.CharField(blank=True, max_length=14, null=True, verbose_name='House hold number:'),
        ),
        migrations.CreateModel(
            name='HistoricalFollowUp',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('crf_status', models.CharField(choices=[('INCOMPLETE', 'Incomplete (some data pending)'), ('COMPLETE', 'Complete')], default='INCOMPLETE', help_text='If some data is still pending, flag this CRF as incomplete', max_length=25, verbose_name='CRF status')),
                ('crf_status_comments', models.TextField(blank=True, help_text='for example, why some data is still pending', null=True, verbose_name='Any comments related to status of this CRF')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_datetime', models.DateTimeField(default=edcs_utils.date.get_utcnow, help_text='Date and time of report.', verbose_name='Report Date and Time')),
                ('test_ordered', models.CharField(choices=[('chest_xray', 'Yes, chest X-ray'), ('ct_scan', 'Yes, CT scan'), ('ultrasound_scan', 'Yes, Ultrasound scan'), ('blood_cbc', 'Yes, Blood CBC'), ('chemistry_tests', 'Yes, Chemistry tests'), ('none', 'None'), ('OTHER', 'Other')], max_length=45, verbose_name='Have any test been ordered at this visit')),
                ('test_ordered_other', edcs_model.models.fields.other_charfield.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If other, please specify ...')),
                ('test_ordered_result', models.TextField(blank=True, null=True, verbose_name='If yes, provide the results')),
                ('hiv_status', models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('IND', 'Indeterminate')], max_length=45, verbose_name="What is the patient's HIV status?")),
                ('viral_load_cd4_off', models.IntegerField(blank=True, null=True, verbose_name='If positive, was the blood sample for viral load and CD4 count off?')),
                ('current_viral_load', models.IntegerField(blank=True, null=True, verbose_name='What is current Viral Load level')),
                ('current_cd4_count', models.IntegerField(blank=True, null=True, verbose_name='What is current CD4 count')),
                ('hiv_genotype', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=15, verbose_name="Was the patient's HIV genotype done?")),
                ('patient_visit_status', models.IntegerField(choices=[('respond_treatment', 'Responding to treatment'), ('no_changes', 'No changes'), ('not_respond_treatment', 'Not responding to treatment'), ('lost_follow_up', 'Lost to follow up'), ('died', 'Died ')], max_length=45, verbose_name='What is the patient status at this visit?')),
                ('respond_treatment', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=15, verbose_name="If the patient is not responding to treatment, has the patient's treatment changed?")),
                ('treatment_change', models.TextField(blank=True, null=True, verbose_name='If yes specify')),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site')),
                ('subject_visit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edcs_subject.subjectvisit')),
            ],
            options={
                'verbose_name': 'historical Follow Up',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='FollowUp',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('crf_status', models.CharField(choices=[('INCOMPLETE', 'Incomplete (some data pending)'), ('COMPLETE', 'Complete')], default='INCOMPLETE', help_text='If some data is still pending, flag this CRF as incomplete', max_length=25, verbose_name='CRF status')),
                ('crf_status_comments', models.TextField(blank=True, help_text='for example, why some data is still pending', null=True, verbose_name='Any comments related to status of this CRF')),
                ('report_datetime', models.DateTimeField(default=edcs_utils.date.get_utcnow, help_text='Date and time of report.', verbose_name='Report Date and Time')),
                ('test_ordered', models.CharField(choices=[('chest_xray', 'Yes, chest X-ray'), ('ct_scan', 'Yes, CT scan'), ('ultrasound_scan', 'Yes, Ultrasound scan'), ('blood_cbc', 'Yes, Blood CBC'), ('chemistry_tests', 'Yes, Chemistry tests'), ('none', 'None'), ('OTHER', 'Other')], max_length=45, verbose_name='Have any test been ordered at this visit')),
                ('test_ordered_other', edcs_model.models.fields.other_charfield.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If other, please specify ...')),
                ('test_ordered_result', models.TextField(blank=True, null=True, verbose_name='If yes, provide the results')),
                ('hiv_status', models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('IND', 'Indeterminate')], max_length=45, verbose_name="What is the patient's HIV status?")),
                ('viral_load_cd4_off', models.IntegerField(blank=True, null=True, verbose_name='If positive, was the blood sample for viral load and CD4 count off?')),
                ('current_viral_load', models.IntegerField(blank=True, null=True, verbose_name='What is current Viral Load level')),
                ('current_cd4_count', models.IntegerField(blank=True, null=True, verbose_name='What is current CD4 count')),
                ('hiv_genotype', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=15, verbose_name="Was the patient's HIV genotype done?")),
                ('patient_visit_status', models.IntegerField(choices=[('respond_treatment', 'Responding to treatment'), ('no_changes', 'No changes'), ('not_respond_treatment', 'Not responding to treatment'), ('lost_follow_up', 'Lost to follow up'), ('died', 'Died ')], max_length=45, verbose_name='What is the patient status at this visit?')),
                ('respond_treatment', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=15, verbose_name="If the patient is not responding to treatment, has the patient's treatment changed?")),
                ('treatment_change', models.TextField(blank=True, null=True, verbose_name='If yes specify')),
                ('site', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='sites.site')),
                ('subject_visit', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='edcs_subject.subjectvisit')),
            ],
            options={
                'verbose_name': 'Follow Up',
                'verbose_name_plural': 'Follow Up',
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
            },
            managers=[
                ('on_site', django.contrib.sites.managers.CurrentSiteManager()),
                ('objects', edcs_visit_schedule.managers.CrfModelManager()),
            ],
        ),
    ]
